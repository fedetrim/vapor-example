//
//  TechTalksPresenter.swift
//  App
//
//  Created by Nahuel Zapata on 8/12/18.
//  Copyright (c) 2018 Federico Trimboli. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Models
import UIKit

protocol TechTalksPresentationLogic {
    func presentTechTalks(basedOn response: TechTalks.Load.Response)
}

class TechTalksPresenter: TechTalksPresentationLogic {
    weak var viewController: TechTalksDisplayLogic?

    func presentTechTalks(basedOn response: TechTalks.Load.Response) {
        do {
            let result = try response.result.dematerialize()

            let viewModel = TechTalks.Load.ViewModel(result: .success(mapTechTalksToViewModel(result)))

            self.viewController?.displayTechTalks(viewModel: viewModel)
        } catch {
            // Add error handling stuff
        }
    }

    private func mapTechTalksToViewModel(_ techTalks: [TechTalk]) -> [TechTalks.TechTalkViewModel] {
        return techTalks.map {
            return TechTalks.TechTalkViewModel(title: $0.title,
                                               description: $0.description,
                                               speakerName: "\($0.speaker.firstName) \($0.speaker.lastName)",
                                               speakerPhoto: $0.speaker.photoUrl,
                                               speakerGithubUrl: $0.speaker.githubUrl)
        }
    }
}
