//
//  TechTalkDetailInteractor.swift
//  App
//
//  Created by Nahuel Zapata on 8/12/18.
//  Copyright (c) 2018 Federico Trimboli. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol TechTalkDetailBusinessLogic {

    func performLoad(basedOn request: TechTalkDetail.Load.Request)
}

protocol TechTalkDetailDataStore {
    var techTalk: TechTalk! { get set }
}

class TechTalkDetailInteractor: TechTalkDetailBusinessLogic, TechTalkDetailDataStore {
    var presenter: TechTalkDetailPresentationLogic?
    var provider: TechTalkDetailProvideable? = FakeTechTalkDetailProvider()
    var techTalk: TechTalk!

    func performLoad(basedOn request: TechTalkDetail.Load.Request) {
        provider?.provide(techTalkId: techTalk.id!) {
            do {
                let reviews = try $0.dematerialize()

                self.presenter?.presentDetail(basedOn: TechTalkDetail.Load.Response(result: .success(self.mapToDetail(techTalk: self.techTalk, reviews: reviews))))
            } catch {
                // Perform error handling
            }
        }
    }

    func mapToDetail(techTalk: TechTalk, reviews: [Review]) -> TechTalkDetails {
        return TechTalkDetails(id: techTalk.id,
                               title: techTalk.title,
                               description: techTalk.description,
                               speakers: techTalk.speakers,
                               reviews: reviews)
    }
}
